<!DOCTYPE html>
<html lang="en">
<head>
	
	<title>Flourish - Spatio-Temporal-Spectral Mapping</title>
	<script src="https://api.mapbox.com/mapbox.js/v3.1.0/mapbox.js"></script>
	<link href="https://api.mapbox.com/mapbox.js/v3.1.0/mapbox.css" rel="stylesheet" />
	
	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

	<!-- jQuery library -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

	<!-- Latest compiled JavaScript -->
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    
   <style>
      #map {
       position: absolute; left: 0px; top: 90px; bottom: 0px; right: 0px; 
      }
      body {background-color: white;} 
   </style>
 
</head>

<body>
	<link href="https://api.mapbox.com/mapbox.js/plugins/leaflet-draw/v0.2.3/leaflet.draw.css" rel="stylesheet" />
	<script src="https://api.mapbox.com/mapbox.js/plugins/leaflet-draw/v0.2.3/leaflet.draw.js"></script>
	<script src="https://api.mapbox.com/mapbox.js/plugins/leaflet-geodesy/v0.1.0/leaflet-geodesy.js"></script>
	
	<style>
		.map-overlay {
		    font: 14px/8px "Helvetica Neue", Arial, Helvetica, sans-serif;
		    position: absolute;
		    width: 15%;
		    top: 90px;
		    left: 35px;
		    padding: 10px;
		}
		.map-overlay .map-overlay-inner {
		    background-color: #fff;
		    box-shadow:0 1px 2px rgba(0, 0, 0, 0.20);
		    opacity: 0.7;
		    border-radius: 3px;
		    padding: 10px;
		    margin-bottom: 10px;
		}
		.map-overlay h2 {
		    line-height: 24px;
		    display: block;
		    margin: 0 0 10px;
		}
		.map-overlay input {
		    background-color: transparent;
		    display: inline-block;
		    width: 100%;
		    position: relative;
		    margin: 0;
		    cursor: ew-resize;
		}
		.map-bar {
		    font: 14px/8px "Helvetica Neue", Arial, Helvetica, sans-serif;
		    position: absolute;
		    width: 330px;
		    bottom: 0px;
		    left: 50%;
		    padding: 10px;
		    margin-left: -150px;
		}	
	   .map-bar .map-bar-inner {
		    background-color: #fff;
		    box-shadow:0 1px 2px rgba(0, 0, 0, 0.20);
		    opacity: 0.7;
		    border-radius: 3px;
		    padding: 3px;
		    margin-bottom: 10px;
		}		
		.menu-ui {
		  background:#fff;
		  position:absolute;
		  opacity: 0.7;
		  top:190px;right:10px;
		  z-index:1;
		  border-radius:3px;
		  width:120px;
		  border:1px solid rgba(0,0,0,0.4);
		}
		.menu-ui a {
		  font-size:13px;
		  color:#ff0000;
		  display:block;
		  margin:0;padding:0;
		  padding:10px;
		  text-decoration:none;
		  border-bottom:1px solid rgba(0,0,0,0.25);
		  text-align:center;
		}
		.menu-ui a:first-child {
		  border-radius:3px 3px 0 0;
		}
		.menu-ui a:last-child {
		  border:none;
		  border-radius:0 0 3px 3px;
		}
		.menu-ui a:hover {
		  background:#f8f8f8;
		  color:#404040;
		}
		.menu-ui a.active {
		  background:#4cbe38;
		  color:#FFF;
		}
		.menu-ui a.active:hover {
		  background:#a0ff60;
		}
		pre.ui-coordinates {
		  position:absolute;
		  bottom:0px;
		  left:10px;
		  padding:5px 10px;
		  background:rgba(0,0,0,0.5);
		  color:#fff;
		  font-size:11px;
		  line-height:18px;
		  border-radius:3px;
		}
	</style>
	
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-2">
				<img src="index.png" style="width:200px;" > 
			</div>
			<div class="col-md-10">
				<h3 style="display: inline-block; vertical-align: middle; line-height: 45px;"><strong> Spatio-Temporal-Spectral Mapping</strong></h3>		

			</div>
		</div>
		
		<nav id="menu-ui" class="menu-ui"></nav>
		<div id="map"></div>
		<pre id="coordinates" class="ui-coordinates"></pre>
	
			<div class="map-overlay top">
	    		<div class="map-overlay-inner">
	        		<h4>Timeline</h4>
	        		<label id="date"></label>
	        		
	   <!-- SLIDER PARAMETERS -->
<input id="slider" type="range" min="0" max="5" step="1" value="0" />
	        		
	    		</div>
	    	<div class="map-overlay-inner">
	      	<div id="legend" class="legend">
	         	<div class="bar"></div>
	            <div>Date: <label id="dateToShow">Placeholder</label></div>
	        	</div>
	    	</div>
			</div><div class="map-bar top">
			<div class="map-bar-inner">
	    		<img src="bar.png" style="width:300px;" >
	    	</div></div>
	
			<script>
				L.mapbox.accessToken = "pk.eyJ1IjoibW9oYW5hZHQiLCJhIjoiY2oyaG1penBhMDBsZjMzbWU2aGlvbWluZyJ9.JgNdHCfEoon5xfns4MD1AQ";
				
         	<!-- FILL WITH IMAGES & BOUNDING BOXES -->
var imageUrl1_1= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-04-13/Orthomosaics/SequoiaNDVI.png",
imageUrl1_2= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-04-13/Orthomosaics/SequoiaNIR.png",
imageUrl1_3= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-04-13/Orthomosaics/SequoiaRED.png",
imageUrl1_4= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-04-13/Orthomosaics/SequoiaRGB.png",
imageBounds1= L.latLngBounds([
[47.444286, 8.6845036],
[47.443863, 8.6837778]]),
imageUrl2_1= "/home/thanu/Documents/SpatioTemporalSpectralMapping/spatio_temporal_spectral_mapping/Matlab/data/2016-10-13/Orthomosaics/filledWith1NeighborAverage5Iter.png",
imageBounds2= L.latLngBounds([
[47.450325, 8.6817646],
[47.449883, 8.6811008]]),
imageUrl3_1= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05/Orthomosaics/SequoiaNDVI.png",
imageUrl3_2= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05/Orthomosaics/SequoiaRED.png",
imageUrl3_3= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05/Orthomosaics/SequoiaREG.png",
imageUrl3_4= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05/Orthomosaics/SequoiaGRE.png",
imageUrl3_5= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05/Orthomosaics/SequoiaNIR.png",
imageUrl3_6= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05/Orthomosaics/SequoiaRGB.png",
imageBounds3= L.latLngBounds([
[47.444473, 8.6848106],
[47.443264, 8.6818953]]),
imageUrl4_1= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05_10m/Orthomosaics/SequoiaNDVI.png",
imageUrl4_2= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05_10m/Orthomosaics/SequoiaNIR.png",
imageUrl4_3= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05_10m/Orthomosaics/SequoiaRED.png",
imageUrl4_4= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-05_10m/Orthomosaics/SequoiaRGB.png",
imageBounds4= L.latLngBounds([
[47.444305, 8.6846046],
[47.443893, 8.6835709]]),
imageUrl5_1= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-18/Orthomosaics/CutNDVI.png",
imageUrl5_2= "/media/thanu/raghavshdd1/2017-05-18/Orthomosaics/CutEGI.png",
imageUrl5_3= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-18/Orthomosaics/CutRED.png",
imageUrl5_4= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-18/Orthomosaics/CutREG.png",
imageUrl5_5= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-18/Orthomosaics/CutGRE.png",
imageUrl5_6= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-18/Orthomosaics/CutNIR.png",
imageUrl5_7= "/home/thanu/polybox/spatio_temporal_spectral_mapping/2017-05-18/Orthomosaics/CutRGB.png",
imageBounds5= L.latLngBounds([
[47.444244, 8.6842785],
[47.444035, 8.6837893]]),
imageUrl6_1= "/media/thanu/raghavshdd1/2017-06-16/Sequoia/Orthomosaics/SequoiaSGR.png",
imageUrl6_2= "/media/thanu/raghavshdd1/2017-06-16/Sequoia/Orthomosaics/SequoiaEGI.png",
imageUrl6_3= "/media/thanu/raghavshdd1/2017-06-16/Sequoia/Orthomosaics/SequoiaRGB.png",
imageBounds6= L.latLngBounds([
[47.45034, 8.681735],
[47.449902, 8.6811066]]);
         	
				                
				var map = L.mapbox.map("map")
				    .setView([47.3, 8.5], 10)
				    .fitBounds(imageBounds1);    
				L.control.layers({
				    "Mapbox Satellite": L.mapbox.tileLayer("mapbox.satellite").addTo(map),
				    "Mapbox Streets": L.mapbox.tileLayer("mapbox.streets")
				}).addTo(map);
				var imageGroup = L.layerGroup().addTo(map);
				var layers = document.getElementById("menu-ui");
				// Create image switchers
				var linkRGB = document.createElement("a");
				    linkRGB.href = "#";
				    linkRGB.className = "active";
				    linkRGB.innerHTML = "RGB";
				var linkNIR = document.createElement("a");
				    linkNIR.href = "#";
				    linkNIR.className = "active";
				    linkNIR.innerHTML = "NIR";    
				var linkGrey = document.createElement("a");
				    linkGrey.href = "#";
				    linkGrey.className = "active";
				    linkGrey.innerHTML = "Greyscale"; 
				var linkGRE = document.createElement("a");
				    linkGRE.href = "#";
				    linkGRE.className = "active";
				    linkGRE.innerHTML = "Green";  
				var linkREG = document.createElement("a");
				    linkREG.href = "#";
				    linkREG.className = "active";
				    linkREG.innerHTML = "REG";         
				var linkNDVI = document.createElement("a");
				    linkNDVI.href = "#";
				    linkNDVI.className = "active";
				    linkNDVI.innerHTML = "NDVI";  
				var linkRED = document.createElement("a");
				    linkRED.href = "#";
				    linkRED.className = "active";
				    linkRED.innerHTML = "RED";  				 
				var linkSGR = document.createElement("a");
				    linkSGR.href = "#"; 
				    linkSGR.className = "active";
				    linkSGR.innerHTML = "SGR";    
				var linkEGI = document.createElement("a");
				    linkEGI.href = "#"; linkEGI.className = "active"; linkEGI.innerHTML = "EGI";  
     			<!-- DEFAULT DATASET -->
addImage(imageUrl1_1,imageBounds1,linkNDVI, imageGroup);
layers.appendChild(linkNDVI);
addImage(imageUrl1_2,imageBounds1,linkNIR, imageGroup);
layers.appendChild(linkNIR);
addImage(imageUrl1_3,imageBounds1,linkRED, imageGroup);
layers.appendChild(linkRED);
addImage(imageUrl1_4,imageBounds1,linkRGB, imageGroup);
layers.appendChild(linkRGB);
     			
				
				var date = [
				<!-- ADD DATES OF DATASETS -->
"13.April 2017",
"13.October 2016",
"5.May 2017",
"5.May 2017-10m",
"18.May 2017",
"16.June 2017",


				];
				
				document.getElementById("dateToShow").innerText = date[0];				
				
				var coordinates = document.getElementById("coordinates");
				
				var marker = L.marker([47.45, 8.6817], {
				    icon: L.mapbox.marker.icon({
				      "marker-color": "#4cbe38"
				    }),
				    draggable: true
				}).addTo(map);
				
				marker.on("dragend", ondragend);
				
				ondragend();
				
				var featureGroup = L.featureGroup().addTo(map);
				
				var drawControl = new L.Control.Draw({
				  edit: {
				    featureGroup: featureGroup
				  },
				  draw: {
				    polygon: true,
				    polyline: false,
				    rectangle: false,
				    circle: false,
				    marker: false
				  }
				}).addTo(map);
				
				drawControl.setDrawingOptions({
				    polygon: {
				    	shapeOptions: {
				        	color: "#4cbe38"
				        }
				    }
				});
				
				map.on("draw:created", showPolygonArea);
				map.on("draw:edited", showPolygonAreaEdited);
				
				// Functions
				document.getElementById("slider").addEventListener("input", function(e) {
				   var dataSet = parseInt(e.target.value);
					document.getElementById("dateToShow").innerText = date[dataSet];

					<!-- SWITCH BETWEEN DATASETS -->
if (dataSet == 0) {
imageGroup.clearLayers();
while (layers.firstChild) {
layers.removeChild(layers.firstChild);
}
addImage(imageUrl1_1,imageBounds1,linkNDVI, imageGroup);
layers.appendChild(linkNDVI);
linkNDVI.className = "active";
addImage(imageUrl1_2,imageBounds1,linkNIR, imageGroup);
layers.appendChild(linkNIR);
linkNIR.className = "active";
addImage(imageUrl1_3,imageBounds1,linkRED, imageGroup);
layers.appendChild(linkRED);
linkRED.className = "active";
addImage(imageUrl1_4,imageBounds1,linkRGB, imageGroup);
layers.appendChild(linkRGB);
linkRGB.className = "active";
}
if (dataSet == 1) {
imageGroup.clearLayers();
while (layers.firstChild) {
layers.removeChild(layers.firstChild);
}
addImage(imageUrl2_1,imageBounds2,linkGrey, imageGroup);
layers.appendChild(linkGrey);
linkGrey.className = "active";
}
if (dataSet == 2) {
imageGroup.clearLayers();
while (layers.firstChild) {
layers.removeChild(layers.firstChild);
}
addImage(imageUrl3_1,imageBounds3,linkNDVI, imageGroup);
layers.appendChild(linkNDVI);
linkNDVI.className = "active";
addImage(imageUrl3_2,imageBounds3,linkRED, imageGroup);
layers.appendChild(linkRED);
linkRED.className = "active";
addImage(imageUrl3_3,imageBounds3,linkREG, imageGroup);
layers.appendChild(linkREG);
linkREG.className = "active";
addImage(imageUrl3_4,imageBounds3,linkGRE, imageGroup);
layers.appendChild(linkGRE);
linkGRE.className = "active";
addImage(imageUrl3_5,imageBounds3,linkNIR, imageGroup);
layers.appendChild(linkNIR);
linkNIR.className = "active";
addImage(imageUrl3_6,imageBounds3,linkRGB, imageGroup);
layers.appendChild(linkRGB);
linkRGB.className = "active";
}
if (dataSet == 3) {
imageGroup.clearLayers();
while (layers.firstChild) {
layers.removeChild(layers.firstChild);
}
addImage(imageUrl4_1,imageBounds4,linkNDVI, imageGroup);
layers.appendChild(linkNDVI);
linkNDVI.className = "active";
addImage(imageUrl4_2,imageBounds4,linkNIR, imageGroup);
layers.appendChild(linkNIR);
linkNIR.className = "active";
addImage(imageUrl4_3,imageBounds4,linkRED, imageGroup);
layers.appendChild(linkRED);
linkRED.className = "active";
addImage(imageUrl4_4,imageBounds4,linkRGB, imageGroup);
layers.appendChild(linkRGB);
linkRGB.className = "active";
}
if (dataSet == 4) {
imageGroup.clearLayers();
while (layers.firstChild) {
layers.removeChild(layers.firstChild);
}
addImage(imageUrl5_1,imageBounds5,linkNDVI, imageGroup);
layers.appendChild(linkNDVI);
linkNDVI.className = "active";
addImage(imageUrl5_2,imageBounds5,linkEGI, imageGroup);
layers.appendChild(linkEGI);
linkEGI.className = "active";
addImage(imageUrl5_3,imageBounds5,linkRED, imageGroup);
layers.appendChild(linkRED);
linkRED.className = "active";
addImage(imageUrl5_4,imageBounds5,linkREG, imageGroup);
layers.appendChild(linkREG);
linkREG.className = "active";
addImage(imageUrl5_5,imageBounds5,linkGRE, imageGroup);
layers.appendChild(linkGRE);
linkGRE.className = "active";
addImage(imageUrl5_6,imageBounds5,linkNIR, imageGroup);
layers.appendChild(linkNIR);
linkNIR.className = "active";
addImage(imageUrl5_7,imageBounds5,linkRGB, imageGroup);
layers.appendChild(linkRGB);
linkRGB.className = "active";
}
if (dataSet == 5) {
imageGroup.clearLayers();
while (layers.firstChild) {
layers.removeChild(layers.firstChild);
}
addImage(imageUrl6_1,imageBounds6,linkSGR, imageGroup);
layers.appendChild(linkSGR);
linkSGR.className = "active";
addImage(imageUrl6_2,imageBounds6,linkEGI, imageGroup);
layers.appendChild(linkEGI);
linkEGI.className = "active";
addImage(imageUrl6_3,imageBounds6,linkRGB, imageGroup);
layers.appendChild(linkRGB);
linkRGB.className = "active";
}
					 
				});
				
				function addImage(imageUrl, imageBounds, link, group) {
					var image = L.imageOverlay(imageUrl, imageBounds)
						.addTo(group);
				
				    link.onclick = function(e) {
				        e.preventDefault();
				        e.stopPropagation();
						  
						  if (this.className == "active") {
				        		image.setOpacity(0);
				        		this.className = "inactive";
				        } else {
				        		image.setOpacity(1);
				        		this.className = "active";				
				        }
						  
				    };
				        
				}
				
				function ondragend() {
				    var m = marker.getLatLng();
				    coordinates.innerHTML = "Latitude: " + m.lat + "<br />Longitude: " + m.lng;
				}
				
				function showPolygonAreaEdited(e) {
				  e.layers.eachLayer(function(layer) {
				    showPolygonArea({ layer: layer });
				  });
				}
				function showPolygonArea(e) {
				  featureGroup.clearLayers();
				  featureGroup.addLayer(e.layer);
				  e.layer.bindPopup("Area: " + (LGeo.area(e.layer)).toFixed(2) + " m<sup>2</sup>");
				  e.layer.openPopup();
				}			
			</script>
	
	</div>
</body>

</html>